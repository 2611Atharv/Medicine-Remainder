// MainActivity.java
package com.example.medicinereminder;

import android.app.AlarmManager;
import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Intent;
import android.os.Build;
import android.os.Bundle;
import android.view.View;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.util.ArrayList;
import java.util.List;

public class MainActivity extends AppCompatActivity {
    private RecyclerView recyclerView;
    private MedicineAdapter medicineAdapter;
    private List<Medicine> medicineList;
    private DatabaseHelper dbHelper;
    private static final String CHANNEL_ID = "MEDICINE_REMINDER_CHANNEL";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        createNotificationChannel();
        initializeViews();
        setupDatabase();
        loadMedicines();
        setupFAB();
    }

    private void initializeViews() {
        recyclerView = findViewById(R.id.recyclerView);
        recyclerView.setLayoutManager(new LinearLayoutManager(this));
        medicineList = new ArrayList<>();
        medicineAdapter = new MedicineAdapter(medicineList, this);
        recyclerView.setAdapter(medicineAdapter);
    }

    private void setupDatabase() {
        dbHelper = new DatabaseHelper(this);
    }

    private void loadMedicines() {
        medicineList.clear();
        medicineList.addAll(dbHelper.getAllMedicines());
        medicineAdapter.notifyDataSetChanged();
    }

    private void setupFAB() {
        FloatingActionButton fab = findViewById(R.id.fab_add);
        fab.setOnClickListener(view -> {
            Intent intent = new Intent(MainActivity.this, AddMedicineActivity.class);
            startActivityForResult(intent, 1);
        });
    }

    private void createNotificationChannel() {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            CharSequence name = "Medicine Reminder";
            String description = "Channel for medicine reminder notifications";
            int importance = NotificationManager.IMPORTANCE_HIGH;
            NotificationChannel channel = new NotificationChannel(CHANNEL_ID, name, importance);
            channel.setDescription(description);
            
            NotificationManager notificationManager = getSystemService(NotificationManager.class);
            notificationManager.createNotificationChannel(channel);
        }
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == 1 && resultCode == RESULT_OK) {
            loadMedicines();
        }
    }
}

// Medicine.java
public class Medicine {
    private int id;
    private String name;
    private String dosage;
    private String time;
    private boolean isActive;

    public Medicine(int id, String name, String dosage, String time, boolean isActive) {
        this.id = id;
        this.name = name;
        this.dosage = dosage;
        this.time = time;
        this.isActive = isActive;
    }

    // Getters and setters
    public int getId() { return id; }
    public String getName() { return name; }
    public String getDosage() { return dosage; }
    public String getTime() { return time; }
    public boolean isActive() { return isActive; }
    public void setActive(boolean active) { isActive = active; }
}

// DatabaseHelper.java
public class DatabaseHelper extends SQLiteOpenHelper {
    private static final String DATABASE_NAME = "MedicineDB";
    private static final int DATABASE_VERSION = 1;
    private static final String TABLE_MEDICINES = "medicines";

    public DatabaseHelper(Context context) {
        super(context, DATABASE_NAME, null, DATABASE_VERSION);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        String CREATE_MEDICINES_TABLE = "CREATE TABLE " + TABLE_MEDICINES + "("
                + "id INTEGER PRIMARY KEY AUTOINCREMENT,"
                + "name TEXT,"
                + "dosage TEXT,"
                + "time TEXT,"
                + "isActive INTEGER" + ")";
        db.execSQL(CREATE_MEDICINES_TABLE);
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_MEDICINES);
        onCreate(db);
    }

    public long addMedicine(Medicine medicine) {
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues values = new ContentValues();
        values.put("name", medicine.getName());
        values.put("dosage", medicine.getDosage());
        values.put("time", medicine.getTime());
        values.put("isActive", medicine.isActive() ? 1 : 0);
        return db.insert(TABLE_MEDICINES, null, values);
    }

    public List<Medicine> getAllMedicines() {
        List<Medicine> medicineList = new ArrayList<>();
        String selectQuery = "SELECT * FROM " + TABLE_MEDICINES;
        SQLiteDatabase db = this.getReadableDatabase();
        Cursor cursor = db.rawQuery(selectQuery, null);
        
        if (cursor.moveToFirst()) {
            do {
                Medicine medicine = new Medicine(
                    cursor.getInt(0),
                    cursor.getString(1),
                    cursor.getString(2),
                    cursor.getString(3),
                    cursor.getInt(4) == 1
                );
                medicineList.add(medicine);
            } while (cursor.moveToNext());
        }
        cursor.close();
        return medicineList;
    }
}